[tool.poetry]
name = "nautobot-ssot-panorama"
version = "0.1.0"
description = "SSoT sync capabilities with Nautobot Firewall Models Plugin and Panorama"
authors = ["Network to Code, LLC <info@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/networktocode/nautobot-plugin-ssot-panorama"
repository = "https://github.com/networktocode/nautobot-plugin-ssot-panorama"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_ssot_panorama" },
]

[tool.poetry.dependencies]
python = "^3.7"
# Required for Python 3.7 for now. See: https://stackoverflow.com/a/73932581/194311
importlib-metadata = "4.13.0"
# Used for local development
nautobot = { version = "^1.4.0", optional = true }
nautobot-ssot = "^1.1.0"
nautobot-firewall-models = "1.2.0a2"
pan-os-python = "^1.7.3"
nautobot-golden-config = { git = "https://github.com/whitej6/nautobot-plugin-golden-config.git", branch = "jlw-json-fix" }

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and 
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
invoke = "*"
ipython = "*"
mkdocs = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
pytest = "*"
yamllint = "*"
Markdown = "*"
toml = "*"

[tool.poetry.extras]
nautobot = ["nautobot"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"
ignore=".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
